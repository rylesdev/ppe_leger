idCommande (
    idCommande
    idLigneCommande
    idUser
)

idLigneCommande (
    idLigneCommande
    idLivre
    quantiteLivre
)


Modifier tous les "insertCommande" et "insertLigneCommande" dans les vues.

IMPORTANT
    Quand on ajoute dans le panier il faut que le controleur active "insertLigneCommande".
    C'est uniquement lorsque le user paye son panier (en appuyant sur un bouton, qui activera ensuite un POST
    //(if (isset($_POST[]))//) que le insertCommande sera activé.



CHATGPT :
"
Étapes pour corriger le problème
Créer un panier temporaire pour chaque utilisateur
Utilise une table ou une structure côté session pour stocker les livres sélectionnés avant qu'une commande soit validée.

Insérer dans ligneCommande uniquement après validation
L'insertion dans ligneCommande doit être déclenchée une fois que la commande est confirmée via un bouton.

Réorganisation du flux :

Lorsqu'un utilisateur ajoute un livre au panier, stocke les informations dans une table temporaire ou dans une session.
Lorsque l'utilisateur valide son panier, insère une nouvelle commande dans la table commande et déplace les données du panier temporaire vers ligneCommande.
Code PHP corrigé
1. Gestion du panier en session
Ajoute cette logique au début de ton fichier pour initialiser le panier :

php
Copier
Modifier
// Initialisation du panier s'il n'existe pas encore
if (!isset($_SESSION['panier'])) {
    $_SESSION['panier'] = [];
}
2. Ajouter un livre au panier
Modifie la logique du bouton "Ajouter au panier" pour stocker les livres dans la session :

php
Copier
Modifier
case "ajouterPanier":
    if (isset($idLivre) && isset($quantiteLivre) && $quantiteLivre > 0) {
        // Ajouter au panier dans la session
        if (!isset($_SESSION['panier'][$idLivre])) {
            $_SESSION['panier'][$idLivre] = $quantiteLivre;
        } else {
            $_SESSION['panier'][$idLivre] += $quantiteLivre; // Incrémenter la quantité si déjà présent
        }
        echo "<h3 style='color: green;'>Livre ajouté au panier avec succès.</h3>";
    } else {
        echo "<h3 style='color: red;'>Erreur : Quantité non valide ou livre manquant.</h3>";
    }
    break;
3. Valider le panier et créer une commande
Ajoute un bouton pour valider la commande, qui déclenchera cette logique :

php
Copier
Modifier
if (isset($_POST['validerCommande'])) {
    if (!empty($_SESSION['panier'])) {
        // Insérer une nouvelle commande
        $idCommande = $unControleur->insertCommande($idUser);

        if ($idCommande) {
            // Insérer chaque livre du panier dans ligneCommande
            foreach ($_SESSION['panier'] as $idLivre => $quantiteLivre) {
                $unControleur->insertLigneCommande($idCommande, $idLivre, $quantiteLivre);
            }

            // Vider le panier après validation
            $_SESSION['panier'] = [];
            echo "<h3 style='color: green;'>Commande validée avec succès.</h3>";
        } else {
            echo "<h3 style='color: red;'>Erreur : Impossible de créer la commande.</h3>";
        }
    } else {
        echo "<h3 style='color: red;'>Erreur : Votre panier est vide.</h3>";
    }
}
4. Afficher le panier
Crée une section pour afficher les articles présents dans le panier :

php
Copier
Modifier
if (!empty($_SESSION['panier'])) {
    echo "<h3>Votre panier :</h3><ul>";
    foreach ($_SESSION['panier'] as $idLivre => $quantiteLivre) {
        echo "<li>Livre ID : $idLivre | Quantité : $quantiteLivre</li>";
    }
    echo "</ul>";
    echo '<form method="post">
            <button type="submit" name="validerCommande">Valider la commande</button>
          </form>';
} else {
    echo "<h3>Votre panier est vide.</h3>";
}
Résumé des changements
Les livres sont ajoutés au panier via la session ($_SESSION['panier']).
La table commande n'est utilisée que lorsqu'une commande est validée.
Après validation, les livres sont déplacés de la session vers la table ligneCommande.
"




Priorité :

    - Régler le problème de relation entre la table commande et ligneCommande.
         (Commande 1,n -> (Composer) -> 1,1 LigneCommande).

    - Problème de "Erreur : Livre déjà dans le panier. Veuillez modifier le nombre d'exemplaire."
        pour un nouveau user.





A FAIRE :
    Front-Office
        Connexion :
            - Pour le menu principal, afficher d'abord inscription puis connexion.

        Général :
            - Travailler le front-office (html / css / js) pour améliorer l'esthétique du site.

        NavBar :
            - Changer les logos ou bien mettre des écritures à la place.

        Menu :
            - Section "à la une" présentant les livres
                - les plus vendus
                - recommandés
                - en prommotion


    Back-End
        Page
            - Créer une page Utilisateur où un utilisateur peut changer ses informations (email, mdp, nom, etc...)

        PHPMYADMIN
            - Modifier la table commande pour qu'elle contienne plusieurs ligneCommande (voir MCD).
                Actuellement commande = ligneCommande, or il faut que commande < ligneCommande
                ligneCommande = livre
                commande = plusieurs livres
                donc commande = 1 ou plusieurs ligneCommande (commande 1,n -> (Composer) -> 1,1 ligneCommande)

            - Rajouter l'une de ces tables :
                - Catégorie (relation avec Livre)
                    Un Livre appartient à une catégorie (Histoire, Roman, Poème, etc...).
                - Edition (relation avec Livre)
                    Un Livre appartient à une maison d'édition.
                - Promotion (Relation avec Livre)
                    Gère les dates et les prix de promotions des livres en promotion.
                - Avis (relation avec User)
                    Un User peut mettre un avis. Plus tard, créer une view pour afficher les livres les mieux vendus.
                - Abonnement (Relation avec User)
                    Un User peut s'abonner pour avoir des avantages, comme 1 livre offert au bout de 5 livres achetés par exemple.

                - Particulier (HERITAGE DE USER)
                    Utiliser le trigger pour cet héritage (bureau)
                - Société (HERITAGE DE USER)
                    Utiliser le trigger pour cet héritage (bureau)


            - Supprimer la procédure de vérification de disponibilité.
            - Faire un système qui prépare la commande uniquement lorsque le user a payé sur Paypal (Procédure stockée peut-être)
                Si il n'a pas payé la commande doit avoir le statut 'impayé', la dateCommande null, et la dateLivraison null.

            - Le "Nombre Exemplaire" des livres ne descend pas avec le user "Chouaki".

        Panier
            - Problème de "Erreur : Livre déjà dans le panier. Veuillez modifier le nombre d'exemplaire."
                pour un nouveau user.








Fait :
        Acheter :
            - Dans l'onglet "Panier", le client pourra :
                    - Afficher (Modele->selectAllCommande):
                        - Le nom des livres (livre.nomLivre)
                        - Quantité des livres (ligneCommande.quantiteLigneCommande)
                        - Tout en bas :
                            - Récapitulatif du nom de tous les livres (livre)
                            - (View) Montant total de tous les livres (livre et ligneCommande)
                            - Adresse de livraison (user)
                            - Date de livraison (commande)
                            - Bouton pour payer (Paypal)

            - Un client peut acheter un livre en appuyant directement sur un logo dans la colonne "opération".
            - Le client pourra choisir le nombre d'exemplaire à acheter.

            - Faire une opération pour qu'un client puisse supprimer un livre de son panier.
                        Rajouter une colonne "opération" comme les admin pour supprimer un livre du panier.


        Gestion de stocks :
            - Créer une page "Stockage" qui permet aux admin d'augmenter le nombre d'exemplaire pour chaque livre.


        BDD :
            - Faire une View qui va calculer la somme totale de la commande
                en faisant le produit de l'article et du nombre d'exemplaires.

            - Faire une view qui va trier le prix maximum, minimum, l'ordre croissant, décroissant
                pour chaque commande dans la page "panier"->récapitulatif de la commande.

            - Trigger qui empêche une commande si la commande de ce livre existe déjà dans le panier

            - Trigger qui empêche une commande si le stock = 0

            - Trigger qui met à jour automatiquement le stock après une commande

            - Trigger qui envoie une notification dans la table "notification" après chaque commande passée

            - Procédure qui hash automatiquement les mdp

