idCommande (
    idCommande
    idLigneCommande
    idUser
)

idLigneCommande (
    idLigneCommande
    idLivre
    quantiteLivre
)



Priorité :

    Régler le problème de l'insertion de ligneCommande et de commande.
    Le problème provient du fait qu'il y a plusieurs "insertCommande" malgré plusieurs "insertLigneCommande".
    Or, il faudrait une seule "insertCommande" pour plusieurs "insertLigneCommande".


    - Problème de "Erreur : Livre déjà dans le panier. Veuillez modifier le nombre d'exemplaire."
        pour un nouveau user.



A FAIRE :
    Front-Office
        Connexion :
            - Pour le menu principal, afficher d'abord inscription puis connexion.

        Général :
            - Travailler le front-office (html / css / js) pour améliorer l'esthétique du site.

        NavBar :
            - Changer les logos ou bien mettre des écritures à la place.

        Menu :
            - Section "à la une" présentant les livres
                - les plus vendus
                - recommandés
                - en prommotion


    Back-End
        Page
            - Créer une page Utilisateur où un utilisateur peut changer ses informations (email, mdp, nom, etc...)

        PHPMYADMIN
            - Modifier la table commande pour qu'elle contienne plusieurs ligneCommande (voir MCD).
                Actuellement commande = ligneCommande, or il faut que commande < ligneCommande
                ligneCommande = livre
                commande = plusieurs livres
                donc commande = 1 ou plusieurs ligneCommande (commande 1,n -> (Composer) -> 1,1 ligneCommande)

            - Rajouter l'une de ces tables :
                - Catégorie (relation avec Livre)
                    Un Livre appartient à une catégorie (Histoire, Roman, Poème, etc...).
                - Edition (relation avec Livre)
                    Un Livre appartient à une maison d'édition.
                - Promotion (Relation avec Livre)
                    Gère les dates et les prix de promotions des livres en promotion.
                - Avis (relation avec User)
                    Un User peut mettre un avis. Plus tard, créer une view pour afficher les livres les mieux vendus.
                - Abonnement (Relation avec User)
                    Un User peut s'abonner pour avoir des avantages, comme 1 livre offert au bout de 5 livres achetés par exemple.

                - Particulier (HERITAGE DE USER)
                    Utiliser le trigger pour cet héritage (bureau)
                - Société (HERITAGE DE USER)
                    Utiliser le trigger pour cet héritage (bureau)


            - Supprimer la procédure de vérification de disponibilité.
            - Faire un système qui prépare la commande uniquement lorsque le user a payé sur Paypal (Procédure stockée peut-être)
                Si il n'a pas payé la commande doit avoir le statut 'impayé', la dateCommande null, et la dateLivraison null.

            - Le "Nombre Exemplaire" des livres ne descend pas avec le user "Chouaki".

            - Modifier tous les "insertCommande" et "insertLigneCommande" dans les vues.

        Panier
            - Problème de "Erreur : Livre déjà dans le panier. Veuillez modifier le nombre d'exemplaire."
                pour un nouveau user.








Fait :
        Acheter :
            - Dans l'onglet "Panier", le client pourra :
                    - Afficher (Modele->selectAllCommande):
                        - Le nom des livres (livre.nomLivre)
                        - Quantité des livres (ligneCommande.quantiteLigneCommande)
                        - Tout en bas :
                            - Récapitulatif du nom de tous les livres (livre)
                            - (View) Montant total de tous les livres (livre et ligneCommande)
                            - Adresse de livraison (user)
                            - Date de livraison (commande)
                            - Bouton pour payer (Paypal)

            - Un client peut acheter un livre en appuyant directement sur un logo dans la colonne "opération".
            - Le client pourra choisir le nombre d'exemplaire à acheter.

            - Faire une opération pour qu'un client puisse supprimer un livre de son panier.
                        Rajouter une colonne "opération" comme les admin pour supprimer un livre du panier.


        Gestion de stocks :
            - Créer une page "Stockage" qui permet aux admin d'augmenter le nombre d'exemplaire pour chaque livre.


        BDD :
            - Faire une View qui va calculer la somme totale de la commande
                en faisant le produit de l'article et du nombre d'exemplaires.

            - Faire une view qui va trier le prix maximum, minimum, l'ordre croissant, décroissant
                pour chaque commande dans la page "panier"->récapitulatif de la commande.

            - Trigger qui empêche une commande si la commande de ce livre existe déjà dans le panier

            - Trigger qui empêche une commande si le stock = 0

            - Trigger qui met à jour automatiquement le stock après une commande

            - Trigger qui envoie une notification dans la table "notification" après chaque commande passée

            - Procédure qui hash automatiquement les mdp

