 - Mot de passe oublié dans la Page Connexion.
    - Renouvellement du mot de passe tous les 90 jours.
    - Archiver toutes les commandes qui ont été expédiées avec le nom du client.
    - Créer une view sur le nombre de livres vendus par catégorie.
    - Ajouter le champ "nbCommandeUser" sur la table user qui permet, après chaque achat d'un livre, d'incrémenter automatiquement le champ "nbCommandeUser".



    // - Renouvellement du mot de passe tous les 90 jours.
                        delimiter $$
                        create procedure pVerifDateMdp(
                            in p_idUser VARCHAR(50)
                        )
                        begin
                            declare v_dateMdp date;

                            select dateMdp
                            into v_dateMdp
                            from mdp
                            where idUser = p_idUser
                            order by dateMdp desc
                            LIMIT 1;

                            if v_dateMdp is null or v_dateMdp < DATE_SUB(curdate(), interval 90 DAY) then
                                signal sqlstate '45000'
                                set messsage_text = 'Connexion refusée : Mot de passe expiré. Veuillez le changer.';
                            end if;
                        end $$
                        delimiter ;


    // - Archiver toutes les commandes qui ont été expédiées avec le nom du client.
           delimiter $$
           create trigger tArchiveCommande
           after update on commande
           for each row
           begin
               if old.statutcommande != 'expédiée' and new.statutcommande = 'expédiée' then
                   insert into archive (idCommande, nomClient, dateCommande, dateArchivage)
                   values
                       (new.idcommande,
                       (select u.nomuser from user u where u.iduser = new.iduser),
                       new.datecommande,
                       curdate());

                        DELETE FROM ligneCommande WHERE idCommande = NEW.idCommande;
                        DELETE FROM commande WHERE idCommande = NEW.idCommande;
               end if;
           end $$
           delimiter ;


    // - Créer une view sur le nombre de livres vendus par catégorie
        create or replace view vNombreLiveCategorie as
        select c.nomCategorie, sum(li.quantiteLigneCommande) as Nombre_Livre_Vendu
        from ligneCommande li
        inner join livre l
        ON li.idLivre = l.idlivre
        inner join categorie c
        on l.idCategorie = c.idCategorie
        group by c.nomCategorie;


    // - Ajouter le champ "nbCommandeUser" sur la table user qui permet, après chaque achat d'un livre, d'incrémenter automatiquement le champ "nbCommandeUser"
        delimiter $$
        create trigger tUpdateNbCommandeUser
        after update on commande
        for each row
        begin
            if old.statutCommande != 'expédiée' and new.statutCommande = 'expédiée' then
                update user
                set nbCommandeUser = IFNULL(nbCommandeUser, 0) + IFNULL((
                    select sum(quantiteLigneCommande)
                    from ligneCommande
                    where idCommande = new.idCommande
                ), 0)
                where idUser in (select idUser from commande where idCommande = new.idCommande);
            end if;
        end $$
        delimiter ;